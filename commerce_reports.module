<?php

/**
 * Implements hook_menu().
 */
function commerce_reports_menu() {
  $items = array();

  $items['admin/commerce/reports'] = array(
    'title' => 'Reports',
    'description' => 'View reports for your store.',
    'page callback' => 'commerce_reports_overview_page', 
    'access arguments' => array('access commerce reports'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 50,
    'file' => 'commerce_reports.admin.inc',
  );

  return $items;
}

function commerce_reports_theme($existing, $type, $theme, $path){
  return array(
    'statistics' => array(
      'variables' => array('sales' => NULL, 'statistics' => NULL),
      'template' => 'statistics',
      'path' => drupal_get_path('module', 'commerce_reports') .'/theme'
    )
  );
}

/**
 * Implements hook_permission().
 */
function commerce_reports_permission() {
  return array(
    'access commerce reports' => array(
      'title' => t('Access commerce reports'),
    )
  );
}

/**
 * Implements hook_views_api().
 */
function commerce_reports_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_reports') . '/includes/views',
  );
}

/**
 * Implements hook_date_formats().
 */
function commerce_reports_date_formats() {
  return array(
    array(
      'type' => 'commerce_reports',
      'format' => 'l N F o',
      'locales' => array(),
    )
  );
}

function commerce_reports_get_date($date, $label) {
  $timestamp = strtotime($date);
  
  $info = array(
    'timestamp' => $timestamp,
    'absolute' => format_date($timestamp, 'commerce_reports'),
    'relative' => $date,
    'label' => $label,
  );
  
  $info['combined'] = $info['label'] . ', ' . $info['absolute'];
  
  return $info;
}

function commerce_reports_sales_data($start = 0) {
  $sales = array();
  
  $query = db_select('commerce_payment_transaction', 'cpt')
    ->fields('cpt', array('currency_code'))
    ->condition('created', $start, '>=');
    
  $query->addExpression('SUM(amount)', 'sum');
  $query->addExpression('AVG(amount)', 'average');
  $query->addExpression('COUNT(*)', 'count');
  
  $result = $query->execute();
  
  while ($row = $result->fetchAssoc()) {
    $currency = $row['currency_code'];
    unset($row['currency_code']);

    if (empty($row['average'])) $row['average'] = 0;
    
    $sales[$currency] = $row;
  }
  
  return $sales;
}

function commerce_reports_sales_format($data, $dateInfo, $style = 'combined') {
  $sales = array();
  
  foreach ($data as $currency => $row) {
    $sales[] = array($dateInfo[$style], $row['count'], commerce_currency_format($row['sum'], $currency), !isset($row['average']) ? null : commerce_currency_format($row['average'], $currency));
  }
  
  return $sales;
}

function commerce_reports_sales($dateInfo, $style = 'combined') {
  return commerce_reports_sales_format(commerce_reports_sales_data($dateInfo['timestamp']), $dateInfo, $style);
}
