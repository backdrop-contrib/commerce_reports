<?php

/**
 * Implements hook_menu().
 */
function commerce_reports_tax_menu() {
  $items = array();

  $items['admin/commerce/config/taxes/reports'] = array(
    'title' => 'Tax reporting',
    'description' => 'Tax reporting.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_reports_tax_generate'),
    //'access callback' => 'commerce_order_access',
    //'access arguments' =>  array('configure store'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'commerce_reports_tax.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_views_api().
 */
function commerce_reports_tax_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_reports_tax') . '/includes/views',
  );
}

/**
 * Implements hook_entity_info().
 */
function commerce_reports_tax_entity_info() {
  return array(
    'commerce_reports_tax' => array(
      'label' => t('tax report'),
      'plural label' => t('Tax reports'),
      'controller class' => 'CommerceReportsTaxEntityController',
      'base table' => 'commerce_reports_tax',
      'uri callback' => 'commerce_reports_tax_uri',
      'label callback' => 'commerce_reports_tax_label',
      'entity keys' => array(
        'id' => 'report_id',
      ),
      'access callback' => 'commerce_reports_tax_access',
      'module' => 'commerce_reports_tax',
      'admin ui' => array(
        'path' => 'admin/commerce/reports/tax',
        'file' => 'commerce_reports_tax.admin.inc',
        'controller class' => 'CommerceReportsTaxUIController',
      ),
    ),
  );
}

/**
 * Implements hook_entity_property_info_alter().
 */
function commerce_reports_tax_entity_property_info_alter(&$info) {
  $properties =& $info['commerce_reports_tax']['properties'];
  
  $properties['start']['type'] = 'date';
  $properties['end']['type'] = 'date';
}

// TODO Apply access control across the whole module.
function commerce_reports_tax_access($op, $type = NULL, $account = NULL) {
  return user_access('administer store', $account);
}

function commerce_reports_tax_uri($report) {
  return array(
    'path' => 'admin/commerce/reports/tax/' . $report->report_id,
  );
}

function commerce_reports_tax_label($entity, $entity_type) {
  return $entity->title;
}

function commerce_reports_tax_save($report) {
  return entity_get_controller('commerce_reports_tax')->save($report);
}

function commerce_reporst_tax_cache_reset($report) {
  commerce_reports_tax_cache_delete(array($report->report_id => $report));
  
  // Update last changed timestamp.
  commerce_reports_tax_save($report);
}

function commerce_reports_tax_generate($report) {
  $batch = array(
    'title' => t('Generating tax report'),
    'operations' => array(
      array('_commerce_reports_tax_create', array($report)),
      array('_commerce_reports_tax_generate', array()),
    ),
    'finished' => '_commerce_reports_tax_finished',
    'file' => drupal_get_path('module', 'commerce_reports_tax') . '/commerce_reports_tax.batch.inc',
  );
  
  batch_set($batch);
}

function commerce_reports_tax_cache_delete($ids) {
  db_delete('commerce_reports_tax_rate_aggregate')
    ->condition('report_id', array_keys($ids), 'IN')
    ->execute();
    
  db_delete('commerce_reports_tax_rate_orders')
    ->condition('report_id', array_keys($ids), 'IN')
    ->execute();
    
  db_delete('commerce_reports_tax_rate')
    ->condition('report_id', array_keys($ids), 'IN')
    ->execute();
}
